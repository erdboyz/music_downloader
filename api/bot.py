import asyncio
import os
import re
import tempfile
from pathlib import Path
import aiohttp
import yt_dlp
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import Message, BufferedInputFile
from aiogram.client.default import DefaultBotProperties
from aiogram.client.session.aiohttp import AiohttpSession
from aiogram.enums import ParseMode
import logging
from dotenv import load_dotenv

load_dotenv()

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN environment variable is not set")

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

SOUNDCLOUD_REGEX = re.compile(
    r'https?://(?:www\.)?soundcloud\.com/[\w\-\.]+/[\w\-\.]+'
)

class SoundCloudDownloader:
    def __init__(self):
        self.ydl_opts = {
            'format': 'best[ext=mp3]/best[acodec=mp3]/best[abr<=320]/best',
            'outtmpl': '%(title)s.%(ext)s',
            'extractaudio': True,
            'audioformat': 'mp3',
            'audioquality': '192',
            'quiet': True,
            'no_warnings': True,
            'extract_flat': False,
            'writeinfojson': False,
            'writethumbnail': False,
            'socket_timeout': 30,
            'retries': 3,
            'fragment_retries': 3,
            'user_agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
            'referer': 'https://soundcloud.com/',
        }
    
    async def download_track(self, url: str, temp_dir: str) -> tuple[str, dict]:
        loop = asyncio.get_event_loop()
        
        def _download():
            with yt_dlp.YoutubeDL(self.ydl_opts) as ydl:
                info = ydl.extract_info(url, download=False)
                
                filename = f"{info.get('title', 'track')}.{info.get('ext', 'mp3')}"
                filename = re.sub(r'[<>:"/\\|?*]', '_', filename)
                filepath = os.path.join(temp_dir, filename)
                
                opts = self.ydl_opts.copy()
                opts['outtmpl'] = filepath
                
                with yt_dlp.YoutubeDL(opts) as ydl_download:
                    ydl_download.download([url])
                
                return filepath, info
        
        return await loop.run_in_executor(None, _download)

downloader = SoundCloudDownloader()

@dp.message(Command("start"))
async def start_handler(message: Message):
    welcome_text = """
üéµ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SoundCloud Bot!</b>

–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–∫–∞—á–∞—Ç—å –º—É–∑—ã–∫—É —Å SoundCloud.

<b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ —Å SoundCloud
‚Ä¢ –Ø —Å–∫–∞—á–∞—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º –∞—É–¥–∏–æ—Ñ–∞–π–ª

<b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Å—Å—ã–ª–æ–∫:</b>
‚Ä¢ https://soundcloud.com/artist/track-name
‚Ä¢ https://www.soundcloud.com/artist/track-name

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –ø–æ–º–æ—â—å

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É, –∏ —è –Ω–∞—á–Ω—É –∑–∞–≥—Ä—É–∑–∫—É! üéß
    """
    await message.answer(welcome_text)

@dp.message(Command("help"))
async def help_handler(message: Message):
    help_text = """
üÜò <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>

<b>–ö–∞–∫ —Å–∫–∞—á–∞—Ç—å —Ç—Ä–µ–∫:</b>
1. –ù–∞–π–¥–∏—Ç–µ —Ç—Ä–µ–∫ –Ω–∞ SoundCloud
2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫
3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –º–Ω–µ –≤ —á–∞—Ç
4. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª

<b>–ü—Ä–∏–º–µ—Ä—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Å—ã–ª–æ–∫:</b>
‚Ä¢ https://soundcloud.com/artist/song
‚Ä¢ https://www.soundcloud.com/user/track-name

<b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>
‚Ä¢ –†–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ —Å –ø—É–±–ª–∏—á–Ω—ã–º–∏ —Ç—Ä–µ–∫–∞–º–∏
‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 50MB
‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç

<b>–ü—Ä–æ–±–ª–µ–º—ã?</b>
–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∏ —Ç—Ä–µ–∫ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.
    """
    await message.answer(help_text)

@dp.message(F.text.regexp(SOUNDCLOUD_REGEX))
async def soundcloud_handler(message: Message):
    url = message.text.strip()
    
    status_message = await message.answer("üîÑ <b>–ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É...</b>\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
    
    try:
        with tempfile.TemporaryDirectory() as temp_dir:
            await status_message.edit_text("üì• <b>–ó–∞–≥—Ä—É–∂–∞—é —Ç—Ä–µ–∫ —Å SoundCloud...</b>")
            
            filepath, info = await downloader.download_track(url, temp_dir)
            
            if not os.path.exists(filepath):
                await status_message.edit_text("‚ùå <b>–û—à–∏–±–∫–∞:</b> –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª.")
                return
            
            file_size = os.path.getsize(filepath)
            
            if file_size > 50 * 1024 * 1024:
                await status_message.edit_text(
                    "‚ùå <b>–û—à–∏–±–∫–∞:</b> –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ Telegram (>50MB)."
                )
                return
            
            await status_message.edit_text("üì§ <b>–û—Ç–ø—Ä–∞–≤–ª—è—é –∞—É–¥–∏–æ—Ñ–∞–π–ª...</b>")
            
            with open(filepath, 'rb') as audio_file:
                audio_data = audio_file.read()
            
            title = info.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç—Ä–µ–∫')
            uploader = info.get('uploader', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å')
            duration = info.get('duration', 0)
            
            if duration and isinstance(duration, (int, float)):
                duration = int(duration)
                minutes = duration // 60
                seconds = duration % 60
                duration_str = f"{minutes:02d}:{seconds:02d}"
            else:
                duration_str = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                duration = None
            
            audio_file_obj = BufferedInputFile(
                audio_data,
                filename=f"{title}.mp3"
            )
            
            caption = f"""
üéµ <b>{title}</b>
üë§ <b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</b> {uploader}
‚è± <b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> {duration_str}
üíæ <b>–†–∞–∑–º–µ—Ä:</b> {file_size / (1024*1024):.1f} MB

<i>–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å SoundCloud</i>
            """.strip()
            
            await message.answer_audio(
                audio=audio_file_obj,
                caption=caption,
                title=title,
                performer=uploader,
                duration=duration if duration else None
            )
            
            await status_message.delete()
            
    except yt_dlp.DownloadError as e:
        logger.error(f"–û—à–∏–±–∫–∞ yt-dlp –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—Ä–µ–∫–∞: {e}")
        await status_message.edit_text(
            f"‚ùå <b>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å SoundCloud</b>\n\n"
            f"–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
            f"‚Ä¢ –¢—Ä–µ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ —É–¥–∞–ª–µ–Ω\n"
            f"‚Ä¢ –¢—Ä–µ–∫ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º\n"
            f"‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ SoundCloud\n\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ."
        )
    except FileNotFoundError:
        logger.error("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        await status_message.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞:</b> –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—Ä–µ–∫–∞: {e}")
        error_msg = str(e)
        if "format code" in error_msg.lower():
            await status_message.edit_text(
                "‚ùå <b>–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–∫–∞</b>\n\n"
                "–¢—Ä–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
        else:
            await status_message.edit_text(
                f"‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞</b>\n\n"
                f"–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                f"‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–æ–º\n"
                f"‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º\n"
                f"‚Ä¢ –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç—Ä–µ–∫–∞\n\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç."
            )

@dp.message(F.text)
async def text_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
    text = message.text.lower()
    
    if any(word in text for word in ['soundcloud', '—Å—Å—ã–ª–∫–∞', '—Å–∫–∞—á–∞—Ç—å', '—Ç—Ä–µ–∫']):
        await message.answer(
            "üîó <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ SoundCloud</b>\n\n"
            "–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏:\n"
            "<code>https://soundcloud.com/artist/track-name</code>\n\n"
            "–Ø —Å–º–æ–≥—É —Å–∫–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ —Ç—Ä–µ–∫–∏!"
        )
    else:
        await message.answer(
            "‚ùì <b>–ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É</b>\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ —Å SoundCloud, –∏ —è –µ–≥–æ —Å–∫–∞—á–∞—é!\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."
        )